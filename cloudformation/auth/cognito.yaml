---
AWSTemplateFormatVersion: 2010-09-09
Description: Amazon Cognito setup for Authentication and Authorization layer.

Parameters:

  CALLBACK:
    Type: String
    Description: Callback URL to redirect successful logins.
    ConstraintDescription: Must be an absolute HTTPS URL without fragments / paths.

  TOKENEXP:
    Type: Number
    Default: 1
    Description: Duration for ID Token and Access Token validity.
    ConstraintDescription: 5 minutes to 24 hours.

  REFEXP:
    Type: Number
    Default: 365
    Description: Duration for Refresh Token validity.
    ConstraintDescription: 1 hour to 10 years.

  DOMAIN:
    Type: String
    Description: Subdomain for Auth endpoint.

  RESIDENT:
    Type: String
    Default: com.backend.auth
    Description: Resource server identifier.
    ConstraintDescription: The resource server endpoint or reference.
  
  RESSCOPE:
    Type: String
    Default: request
    Description: Resourse server scope.

  RESNAME:
    Type: String
    Default: AuthBackend
    Description: Resource server friendly name.

  # SAMLURL:
  #   Type: String
  #   Description: SAML metadata URL from IdP.

  # IDPNAME:
  #   Type: String
  #   Description: IdP name.

Resources:

  UserPool:
    Type: AWS::Cognito::UserPool
  
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      AccessTokenValidity: !Sub ${TOKENEXP}
      AllowedOAuthFlows: 
        - code
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes: 
        - email
        - openid
      CallbackURLs: 
        - !Sub ${CALLBACK}
      DefaultRedirectURI: !Sub ${CALLBACK}
      ExplicitAuthFlows: 
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      IdTokenValidity: !Sub ${TOKENEXP}
      PreventUserExistenceErrors: ENABLED
      RefreshTokenValidity: !Sub ${REFEXP}
      UserPoolId: !Sub ${UserPool}
    
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub ${DOMAIN}
      UserPoolId: !Sub ${UserPool}
  
  UserPoolResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties: 
      Identifier: !Sub ${RESIDENT}
      Name: !Sub ${RESNAME}
      Scopes: 
        - ScopeName: !Sub ${RESSCOPE}
          ScopeDescription: Authentication and authorization requests.
      UserPoolId: !Sub ${UserPool}

  # UserPoolIdP:
  #   Type: AWS::Cognito::UserPoolIdentityProvider
  #   Properties: 
  #     AttributeMapping:
  #       "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name": "Name"
  #       "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname": "Given Name"
  #       "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname": "Family Name"
  #       "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress": "Email"
  #     ProviderDetails:
  #       "MetadataURL": !Sub ${SAMLURL}
  #     ProviderName: !Sub ${IDPNAME}
  #     ProviderType: SAML
  #     UserPoolId: !Sub ${UserPool}

Outputs:

  Identifier:
    Description: Cognito identifier for IdP
    Value: !Sub urn:amazon:cognito:sp:${UserPool}

  ACS:
    Description: Cognito ACS URL for IdP
    Value: !Sub https://${DOMAIN}.auth.${AWS::Region}.amazoncognito.com/saml2/idpresponse
  
  RelayState:
    Description: Cognito relay state for IdP
    Value: !Sub https://${DOMAIN}.auth.${AWS::Region}.amazoncognito.com/login?client_id=${UserPoolClient}&response_type=code&redirect_uri=${CALLBACK}
  
  PoolID:
    Description: User Pool ID for Lambda
    Value: !Sub ${UserPool}
  
  PoolARN:
    Description: User Pool ARN for Lambda
    Value: !Sub ${UserPool.Arn}

  ClientID:
    Description: App Client ID for Lambda
    Value: !Sub ${UserPoolClient}
  
  CallbackURL:
    Description: Callback URL for Lambda
    Value: !Sub ${CALLBACK}
  
  KeyURL:
    Description: JWT key URL for Lambda
    Value: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}/.well-known/jwks.json
  
  TokenURL:
    Description: Token URL for Lambda
    Value: !Sub https://${DOMAIN}.auth.${AWS::Region}.amazoncognito.com/oauth2/token
  